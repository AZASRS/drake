% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plan_to_code.R
\name{plan_to_code}
\alias{plan_to_code}
\title{Turn a \code{drake} workflow plan data frame
into a plain R script file.}
\usage{
plan_to_code(plan, con = stdout())
}
\arguments{
\item{plan}{workflow plan data frame. See \code{\link[=drake_plan]{drake_plan()}}
for details.}

\item{con}{a file path or connection to write to.}
}
\description{
In the output file, every target/command pair
becomes a chunk of code.
Targets are arranged in topological order
so dependencies are available before their downstream targets.
Please note:
\enumerate{
\item You are still responsible for loading your project's
packages, imported functions, etc.
\item Triggers disappear.
}
}
\examples{
plan <- drake_plan(
  raw_data = read_excel(file_in("raw_data.xlsx")),
  data = raw_data \%>\%
    mutate(Species = fct_inorder(Species)) \%>\%
    select(-X__1),
  hist = create_plot(data),
  fit = lm(Sepal.Width ~ Petal.Width + Species, data),
  report = render(
    knitr_in("report.Rmd"),
    output_file = file_out("report.html"),
    quiet = TRUE
  ),
  strings_in_dots = "literals"
)
file <- tempfile()
# Turn the plan into an R script a the given file path.
plan_to_code(plan, file)
# Here is what the script looks like.
cat(readLines(file), sep = "\\n")
}
\seealso{
\code{\link[=drake_plan]{drake_plan()}}, \code{\link[=make]{make()}}, \code{\link[=code_to_plan]{code_to_plan()}}
}
