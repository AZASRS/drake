% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict_runtime.R
\name{predict_runtime}
\alias{predict_runtime}
\title{Simulate the runtime of the next call to \code{make()}.}
\usage{
predict_runtime(config = drake::read_drake_config(), targets = NULL,
  from_scratch = FALSE, targets_only = FALSE, future_jobs = NULL,
  digits = NULL, type = c("elapsed", "user", "system"), jobs = 1,
  jobs_sims = 1, sims = 1)
}
\arguments{
\item{config}{option internal runtime parameter list of
\code{\link{make}(...)},
produced by both \code{\link[=make]{make()}} and
\code{\link[=drake_config]{drake_config()}}.}

\item{targets}{Character vector, names of targets.
Predict the runtime of building these targets
plus dependencies.
Defaults to all targets.}

\item{from_scratch}{logical, whether to predict a
\code{\link[=make]{make()}} build from scratch or to
take into account the fact that some targets may be
already up to date and therefore skipped.}

\item{targets_only}{logical, whether to factor in
just the targets into the calculations or use the
build times for everything, including the imports}

\item{future_jobs}{deprecated}

\item{digits}{number of digits for rounding the time}

\item{type}{character scalar: \code{"elapsed"}, \code{"user"}, or \code{"system"}}

\item{jobs}{the \code{jobs} argument of your next planned
\code{make()}. How many targets to do you plan
to have running simultaneously?}

\item{jobs_sims}{Number of jobs to use right now
to speed up the runtime predictions.}

\item{sims}{Number of times to simulate the runtime. Downgrades to 1
if \code{jobs} is 1.}
}
\value{
Simulated runtimes. This is a single \code{lubridate} duration
(seconds) if \code{jobs} is 1 and a vector if \code{jobs} is any larger.
}
\description{
Simulate the runtime of the next \code{make()}
by crudely emulating virtual parallel workers.
Basically, the workers repeatedly grab random available targets
and the observed runtimes are added up per worker. The runtime
is the largest of any of the worker times. Set the number of workers
with \code{jobs}.
}
\examples{
\dontrun{
test_with_dir("Quarantine side effects.", {
load_mtcars_example() # Get the code with drake_example("mtcars").
config <- make(my_plan) # Run the project, build the targets.
predict_runtime(config, from_scratch = TRUE) # 1 job
# Assumes you clean() out your project and start from scratch with 2 jobs.
predict_runtime(config, jobs = 4, from_scratch = TRUE)
# Predict the runtime of just building targets
# "small" and "large".
predict_runtime(
  config,
  targets = c("small", "large"),
  from_scratch = TRUE
)
})
}
}
\seealso{
\code{\link[=build_times]{build_times()}}, \code{\link[=make]{make()}}
}
