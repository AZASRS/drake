% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api-dsl.R
\name{transform_plan}
\alias{transform_plan}
\title{Experimental: transform a plan.}
\usage{
transform_plan(plan, trace = FALSE)
}
\arguments{
\item{plan}{Workflow plan data frame with a column for targets,
a column for commands, a column for transformations,
and a column for optional grouping variables.}

\item{trace}{Logical, whether to add columns to show
what happened during target transformations, e.g.
\code{drake_plan(x = target(..., transform = ...), transform = TRUE)}.}
}
\value{
A transformed workflow plan data frame
}
\description{
This feature has a lot of promise,
but it is still experimental.
Read about the details at
\url{https://ropenscilabs.github.io/drake-manual/plans.html#create-large-plans-the-easy-way} # nolint
Please review your workflow with \code{vis_drake_graph()}
before you run it.
}
\details{
The \code{transform_plan()} function
take an existing \code{drake} plan and applies the transformations
in the optional \code{"transform"} column, expanding and gathering
targets to create a larger plan. Usually this is done
inside \code{drake_plan(transform = TRUE)}, but
\code{transform_plan()} on its own is useful
if you generated multiple plans with \code{drake_plan(transform = FALSE)}
and and want to combine and transform them later.
}
\examples{
plan1 <- drake_plan(
  analysis = target(
    analyze_data(source),
    transform = map(source = c(source1, source2, source3))
  ),
  trace = TRUE
)
plan1$data_size <- c("large", "small", "small")
plan2 <- drake_plan(
  summaries = target(
    summarize_analyses(analysis),
    transform = reduce(data_size)
  ),
  transform = FALSE
)
plan <- bind_plans(plan1, plan2)
plan
transform_plan(plan)
transform_plan(plan, trace = TRUE)
}
\seealso{
\code{\link[=drake_plan]{drake_plan()}}
}
\keyword{experimental}
